When would you want to use a remote repository rather than keeping all your work
local?

    When working on multiple computers, with multiple team members, or to leverage cloud based backup systems

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Incomplete or experimental work could be cloned/pulled by other interested parties or team members. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks create a clone of an existing repository under new ownership, usefule for taking charge of an existing project and leading the project in a new direction. 
    Clones create repository copies, which can be used to collaberate on a project accross devices, or accross team members.
    

What is the benefit of having a copy of the last known state of the remote
stored locally?

    A local copy of the the remote repository will allow you to work offline, and give you a stable file base to work from in a busy project. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Not having Git/GitHub would make collaberation and managing changes a daunting task. Multiple copies of project files would need to be merged by hand, and there would not be a clear concept of a master branch. Change management systems and rigid manual control over the codebase would be required. The work required to setup and maintain git repositories is paled by the work that would be required to maintain manual changes.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
